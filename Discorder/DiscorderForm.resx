<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="searchResultImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>126, 17</value>
  </metadata>
  <data name="searchResultImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADA
        FQAAAk1TRnQBSQFMAgEBAwEAAQQBAAEEAQABGAEAARgBAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFg
        AwABGAMAAQEBAAEYBgABG7EAA9EDxwO5AaIBpAGjAYsBlQGOAXYBigF6AWsBhQFwAWoBhAFtAXEBhwFz
        AYMBjwGDAZkBnAGZA7ADwgPNA9JpAAPRA84DywPHBsMDxgPKA84D0WYAA9IDzAO5AZUBngGYAWUBiQFx
        AT0BgAFSASgBfwFCAR8BgAE4ARwBgAE0AR0BfwEvASABfAEtASgBeQEuATkBdgE4AVgBfQFUAYQBkAGC
        Aa0BrgGtA8YD0WAAA9EDyQO5A6MBjQGMAYsBfAF7AXkBcgFwAW4BcQFvAW0BegF4AXcBiwGKAYkBoQKg
        A7gDyAPQJAABowHlAaIBHwG/ARoBHwG/ARoBrgHoAawtAAPSA8gBsgGxAbIBdAGOAXkBKQF9AUgBFgGH
        AUEBFgGQAUQBFwGXAUYBGQGbAUUBGwGcAUIBHAGbAT0BHgGWATcBHwGOAS8BHwGFASYBHwF6AR0BKAFw
        AR8BVAF4AU0BoQGjAaEDvwPQVwAD0gPMAbcCtgGOAY0BjAFdAVsBWAE5ATUBMgEjASABHgEXARUCEwER
        AQ8BEQEPAQ0BFQETAREBHwEcARkBMgEuASwBVgFTAVABhwGFAYQCtAGzA8sD0hsAAZsB5AGdAQgBuQEF
        ARUBxgERARUBxgERAQgBuQEFAaMB5QGiKgADywG0AbMBtAGhAbkBrAE5AZMBWwERAZIBSgEUAaABVAEW
        AaoBWQEYAbEBWwEZAbQBWQEbAbUBVQEdAbIBTwEfAa0BRwEhAaUBPQEiAZsBMgEiAY8BJwEhAYEBHAEp
        AXUBHQGQAaoBigGvAbEBrwPBA9FRAAPSA8cCoQGgAV4BXAFaASYBIwEhARABDgENAwkSBwEJAggBDQEM
        AQsBHgEbARgBUgFPAUwBmgGZAZgDxgPRFQABmwHkAZ0BCAG6AQgBFQG9ARUBGgG1AR4BGgG1AR4BFQG9
        ARUBCAG6AQgBowHlAaIkAAPSAb4CvAGWAa8BnwFuAbUBjwE6AaoBcQEQAacBXgETAbUBZwEVAb8BbAEW
        AcUBbgEYAcgBbAEaAcgBZwEdAcUBXwEfAb8BVgEhAbcBSwEjAawBPwEkAaABMgEjAZEBJQEsAYgBJAF/
        Aa4BdAGcAbMBkwGwAbEBrgPOTgAD0gPHAZYBlQGUAUABPgE7ARIBEAEPAwghBwENAQwBCwEyAS4BLAGJ
        AYgBhwPFA9IPAAGbAeQBnQEHAbsBDQEUAb0CGgG1AR4BGgG1AR4BGgG1AR4BGgG1AR4BFAG9ARoBBwG7
        AQ0BnwHlAaIhAAPSAaoBsAGqAXABqAGHAV0BuQGOARoBrAFsAQ8BtwFwAREBxQF5ARIBzwF/ARQB1QGA
        ARYB1wF9ARgB1gF3ARsB0gFuAR4BzAFjASEBxAFWASMBuQFJASQBrAE7ASUBnQEuASQBjQEgAToBiwEt
        AXsBpAFrAZ0BpQGRA8pOAAPNAZ4CnQE6ATgBNQIMAQsCBwQICQcMCA4HAQgCCQEIASoBJwEkAZEBkAGO
        A8wMAAGbAeQBnQEHAb4BEwEUAb0CGgG2ASIBGgG2ASIBGgG2ASIBGgG2ASIBGgG2ASIBGgG2ASIBFAG9
        ARoBBwG+ARMBnwHlAaIeAAPSAaIBrwGmAVQBoQF6ARkBowFoARABsgFyAQ4BwwF/AQ4B0AGJAQ8B2gGO
        AREB4AGPARMB4QGLARUB3wGCARgB2QF3ARwB1AFsAR8BzAFgASIBwAFRASMBswFCASUBpAE0AScBlQEn
        ASkBhQEdAT4BgQEsAYoBmgF8A8lLAAPRA7YBTgFMAUoCDAELAQcFCAMHAwgJCQMIAQkCCAYJBgoDCQYK
        AwwBPAE5ATcBrgKtA9EGAAGbAeQBnQEHAb4BEwEUAcEBIwEaAbcBJgEaAbcBJgEaAbgBJgEaAbgBJgEa
        AbgBJgEaAbcBJgEaAbcBJgEaAbcBJgEUAcEBIwEHAb4BEwGfAeYBpB4AAaUBtAGsAUYBogF5ATQBsAGB
        AR8BuwGEARIByAGNAQwB1QGVAQsB3wGbAQwB5AGZAQ8B3QGQARsBzQGKASYBvQGGAR8BwAFxARwBywFj
        ASABwgFWASMBtQFHASgBpwE8ATIBnAE3AUEBlAE6AVIBkAFEAX8BmgFzA81LAAPMAYUBhAGDARwBGwEa
        Aw8GEAMSBhMCEQESAhABDwMTAxQDEgMUAhcKGAMZAxoBHgEdARwBcwFyAXADyQMAAaoB6QGxAQYBvwEa
        ARQBwQEjARkBuQEqARkBuQEqARkBuQEqARkBuQEqARkBuQEqARkBuQEqARkBuQEqARkBuQEqARkBuQEq
        ARkBuQEqARQBwQEjAQYBvwEaAZsB5QGjGwABugHEAcABbQGyAZcBXwG/AZ4BSAHFAZ0BKQHOAZ8BFQHW
        AaIBDQHbAaIBJQHMAa0BUQG7AckBbgG2AeQBeQG2AfIBYgGvAc8BKAG0AXIBHwG9AVcBKgGzAU8BNwGq
        AUwBSwGlAVEBZAGmAWEBdgGlAW4BogGzAZ1OAAK9AbwBVgFUAVIJIgMkBiUDIwE4AjcBbAFxAXQBmQGX
        AZQBeQGPAZoBVQFtAXoBQQE+ATwBKAInAysJLAMtAy4BSgFIAUYBtAKzAwABNQHMAUgBEAG/AScBGQG5
        AS4BGQG5AS4BGQG5AS4BGQG7AS8BGQG7AS8BGQG7AS8BGQG7AS8BGQG7AS8BGQG5AS4BGQG5AS4BGQG5
        AS4BGQG5AS4BEwHDAS0BBgHAAR4BmwHmAaYYAAPQAZcBtAGpAZMBwgGwAbUBzwHGAU4BoQGLATMBywGs
        AVUByQHUAYoBwwH4AZQBwwH/AZABwQH/AYsBvwH/AYkBvQH/AWUBrwHMATEBrgFoAT4BswFfAVYBsAFo
        AXMBtAF5AYwBuQGLAZgBswGUAcgBywHITgABqQGoAacBRgFFAUQDNAY1BjcDNQFMAVMBVAHKAckByAGo
        AdgB8QHVAeUB7AG0AdcB7AGoAc8B5QG5Ab8BwAE8AVcBYgE8AjsCPgc/A0ADQQFFAUQBQwGZAZcBlgMA
        AUEBzgFjAQkBrQEkARoBvgE0ARoBvgE0ARkBvAE0ARkBvAE0ARkBvAE0ARkBvAE0ARkBvAE0ARkBvAE0
        ARkBvAE0ARkBugEzARkBugEzARkBugEzARkBugEzARMBwwEtAQYBwQEkAZsB5gGmFQADzwKpAacCoAGb
        AWoBZgFlASoBMAExAT0BdQGGAVQBigG7AXQBnwHNAZsBwgHxAaABywH/AZoByAH/AZcBxgH/AY8BwQH+
        AWMBrgGyAWIBtgF7AYMBvgGPAZcBwAGbAaQBvAGjAcYBygHGUQACmgGYAUsCSgNHBkgCSQRKAUYBSQFK
        AWwBpAG2AfgC/wGnAd8B+wHHAd0B6AGwAdEB4wG5AeAB8wHYAewB9wEyAZYBxgFJAVIBVQFSAlEGUgNT
        A1QBUgFRAVABigGJAYcDAAHNAfAB1AEQAbYBLwEJAbYBKgEZAcIBOQEZAcIBOQEYAb4BOAEYAb4BOAEY
        Ab4BOAEYAb4BOAEYAb4BOAEYAb4BOAEYAb4BOAEYAbwBNwEYAbwBNwEYAbwBNwEYAbwBNwESAcUBMwEF
        AcUBLAGaAecBqRIAA9EBqQGlAaIBUQFNAUkBFAEWARoBKwE8AU4BGQFvAa0BEwGaAewBDwGQAdoBRgGG
        AbQBqAHJAfABogHEAe8BkgG1AeEBmQHAAfEBjgHAAe0BdwGvAZcBkwG2AZkBsQHAAbMBzQHOAc1UAAGa
        AZkBmAJaAVkDWgZbA1wBXQJcAVkBYwFmAXMBxQHdAfkC/wGmAdcB7AGGAZcBnwGOAZYBmgHNAdwB4wHi
        AfcB/wE1AbEB6AFVAWwBdAFkAmMGZQNmA2cDYwGLAYoBiQYAAccB7wHQARABuQE1AQoBuQEzARkBxQE+
        ARgBwAE9ARgBwAE9ARgBwAE9ARgBwAE9ARgBwAE9ARgBwAE9ARgBwAE9ARgBwAE9ARgBwAE9ARgBvQE8
        ARgBvQE8ARgBvQE8ARIBxgE5AQUBxQEsAZoB5wGpEgABtAKzATABMQEzAWYBfAGWAWMBewGUAV4BnwHG
        AXwB2QH/AWcB1QH/ATcBjwG+AVMBZwF8ATABbQGcARYBdwG4ASwBeQGtAW0BlwHBAX8BmAGmAaABoQGg
        A8ID0VQAAaYCpQJsAWsGbgVvBHABbQFzAXQBkAHIAdUB+wL/AcgB6wH3AakBtQG6AZgBqwGyAdIB6QHy
        AewB+wH/AWUBwAHhAW0BewF/A3cGeAN5A3oBdQJ0AZkBmAGXCQABxwHwAdIBDwG7ATsBCgG5ATMBGAHF
        AUYBGAHDAUMBFwHAAUIBFwHAAUIBFwHAAUIBFwHAAUIBFwHAAUIBGAHDAUMBGAHDAUMBGAHEAUMBGAHD
        AUMBFwHAAUIBFwHAAUIBEgHIAT8BAwHHATcBlwHoAasPAAPPAZ8BoQGjAWoBfwGZAS4BNwFCASABLwE3
        AWoBkwGmAX8BsAHGAWUBiQGdAUQBVwFlAUABngHbAUQBwQH/ASsBtgH7ASQBcgGgATwBQQFIAY0CiwLA
        Ab8DzFQAAboCuQF/AX4BfQOBAoAEgQOCA4MDgQGRAaYBqgHnAfMB9gH6Av8B/QL/Ae0B+wH/AeUB+gH/
        AeAB9AH6AYQBqwG4AocBiAKJBIoGiwONAYUChAGvAq4MAAHHAfAB0gEPAbwBPwEKAbsBOgEYAccBSAEY
        AcUBRgEXAcIBRgEXAcIBRgEXAcIBRgEXAcIBRgEYAcUBRgEYAcgBSAETAckBRQEDAbgBNQEDAbcBNQEK
        AbsBOgEVAb8BRgETAckBRQEDAccBNwGyAe4BwgwAA8oDiAMrAw8BAwICARkBHAEeATUBOgE+Ab8BwQHD
        AcUBzAHSAXQBoAG5AY8B0gHwAY4B1wH3AT0BeAGXAREBEwEVAYYBhAGDAcQBwwHBA8xUAAPMApcBlQOS
        A5MGlAOVBZYBlwGiAbQBuAHLAd8B5AHyAfQB9QHwAfQB9QHfAeYB6AG7Ab8BwQGaAZwBnQGcAZsEnAWd
        BJ4DnwGVAZQBkwPGDwABxwHwAdIBDgG+AUMBBQG8AT0BFwHKAU0BFwHFAUwBFwHFAUwBFwHFAUwBFwHF
        AUwBFwHKAU0BBQG8AT0BEQHCAUcBfAHbAZwBmgHmAbEBTAHVAXYBAgG1AToBFQG/AUYBCwHFAUQBTAHV
        AXYMAAPJA1UDLwMnAxEDCAMVAVMBVAFVA8sB2AHcAd4BpwG6AcIBmAGvAbsBVgFlAXIBEgEVARkBaQFl
        AWEBsgGvAawDzlcAArUBtAKeAZ0JpwOoBakBqgOpAaoBrQGvAbcCuAG3ArkBrwGxAbIBrQKsBa4Erwaw
        A7IDpwGvAa4BrRUAAcYB8QHVAQ4BvgFIAQcBvQFFARcBygFNARcBxwFQARcBxwFQARcBxwFQARcBxwFQ
        AQ4BvgFIAdsB9wHmCQABggHdAaABAgG1AToBDAG4AUQBQQHOAWMMAAPJA2IDUgNFAyYDEQMJAw4CbwFw
        A/8B+QH7Af0BsgG3Ab8BQgFIAVABEgEVARgBZwFjAV8BuwG4AbYD0lcAA88BrQKsA7QDugm7A7wDvQa+
        Ab8BvgG/AcABvwTABsEDwgXDAcQBwQLAAqwBqwLLAcoYAAHGAfEB1QEOAcABTAEHAb0BRQEXAckBUwEX
        AckBUwEXAckBUwEIAbcBRAFnAdQBjQwAAfkB/QH7AQgBtwFEAQoBugFHAUsBzAF5DAADzAN5A3IDcANG
        AygDEwMGATkBOgE8Aa4BtwHBAXUBfgGKAT0BQAFEAzQDdAO+A9JdAAPJArQBswPIBs4GzwPQBdEE0gbT
        A9QG1QPWAdMC0gK4AbcDxR4AAcYB8QHVAQ0BwgFUAQYBwQFNARYBywFaARYBywFaAQEBsgFFAXwB2wGc
        DwABGQG5AVUBCQG6AksBzAF5DAADxANwA3IDoANvA0kDKwEXAhYBDwIQASUBJwEqASsCLANBA00DsWYA
        A8kBvgK9AtQB0wPhA+ID4wbkA+UG5gbnA+gD6QPcAsABvwPHJAABxgHyAdgBDQHCAVQBBgHAAVIBFgHL
        AVoBDAG9AVMBLgHHAWoB+QH9AfsJAAHCAfIB1gEBAbIBRQEJAbkBTgFMAc8BgAwAA9ADlQNXA6UDpANz
        A0wDMAMbAykDSgNoA3sDzWkAA84DwwPQAucB5gPxAvQC9Qn2AvcD9gP0A+sB1QHUAdMCwwHCA80qAAHG
        AfIB2AENAcIBVAEGAcABUgEVAccBXQEBAb8BTgFYAdoBjgHhAfkB6wMAAbEB8AHLAR8B1QFpAQcBugFQ
        AQcBugFQAUwBzwGAEgADpANkA5cDnAN4A1MDNgNRA3YDewO3cgADzAPHA80B1wLWA+AG5ALfAd4D1wLM
        AcsBxQLEA8ozAAHGAfIB2AEMAcUBXAEGAcABVQEUAcwBYgEAAdEBWQEAAdEBWQEAAdEBWQEAAdEBWQEK
        AdMBXwEUAcwBYgEGAcABVQFYAdoBjhIAA84DrQORA4QDaQNnA28DfgOQA7t7AAPSA80EyQLIAckCyAPJ
        A8wD0jwAAcYB8gHYAQwBxQFcAQEBwQFVAQQByAFaAQUB2AFhAQUB2AFhAQQB0wFfAQQBxgFYAQEBwQFV
        AQEBwQFVAa4B7QHJGAAD0QOuA6kDvgPO2wAB2wH3AeYBcgHhAaQBZgHeAZwBZgHeAZwBZgHeAZwBZgHe
        AZwBZgHeAZwBcgHhAaQBwgHyAdYeAAPSdQABQgFNAT4HAAE+AwABKAMAAWADAAEYAwABAQEAAQEFAAEg
        AQEWAAP/AQAG/wH4AQABDwMAAf4BAAF/A/8B4AEAAQcDAAH4AQABHwH+AR8B/wHAAQABAwMAAeABAAEH
        AfwBDwH/AcABAAEBAwABwAEAAQMB+AEHAf8BgAEAAQEDAAGAAQABAQHwAQMB/wGAAQABAQMAAYABAAEB
        AeABAQH/AYABAAEBBgABwAEAAf8BwAEAAQEGAAGAAQABfwHAAQABAwYAAYABAAE/AcABAAEDBgABgAEA
        AR8BwAEAAQcGAAGAAQABDwHAAQABDwYAAcABAAEHAeABAAEPBgAB4AEAAQMB4AEAAQ8GAAHwAQABAQHg
        AQABDwYAAfgBAAEBAeABAAEPAwABgAEAAQEB/AEAAeEB4AEAAQ8DAAGAAQABAQH+AQEB4QHgAQABHwMA
        AcABAAEDAf8BAQHxAeABAAF/AwAB4AEAAQcB/wGAAeEB4AEAAX8DAAHwAQABDwH/AcABQQH4AQAB/wMA
        AfwBAAE/Af8B4AEBAfgBAQH/AwAB/wEAAv8B8AEBAf4BDwH/AwAE/wH4AQMB/wF/Af8DAAs=
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>332, 17</value>
  </metadata>
</root>